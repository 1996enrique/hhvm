/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010-present Facebook, Inc. (http://www.facebook.com)  |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#include <cstdio>
#include "hphp/runtime/vm/hhbc.h"

using namespace HPHP;

const char* fix_self(const char* name) {
  // We could avoid this by renaming Self to SelfCls
  return (strcmp(name, "Self") == 0) ? "Self_" : name;
}

#define IMM_IVA "IVA"
#define IMM_LA "LA"
#define IMM_I64A "I64A"
#define IMM_NLA "NLA"
#define IMM_ILA "ILA"
#define IMM_IA "IA"
#define IMM_DA "DA"
#define IMM_SA "SA"
#define IMM_AA "AA"
#define IMM_RATA "RATA"
#define IMM_BA "BA"
#define IMM_OA(ty) "OA<" #ty ">"
#define IMM_KA "KA"
#define IMM_LAR "LAR"
#define IMM_ITA "ITA"
#define IMM_FCA "FCA"
#define IMM_BLA "BLA"
#define IMM_SLA "SLA"
#define IMM_VSA "VSA"

#define IMM_NA ""
#define IMM_ONE(a) IMM_##a ", "
#define IMM_TWO(a,b) IMM_ONE(a) IMM_##b ", "
#define IMM_THREE(a,b,c) IMM_TWO(a,b) IMM_##c ", "
#define IMM_FOUR(a,b,c,d) IMM_THREE(a,b,c) IMM_##d ", "

#define IN_NOV "fn()"
#define IN_ONE(a) "fn(" #a ")"
#define IN_TWO(a,b) "fn(" #a ", " #b ")"
#define IN_THREE(a,b,c) "fn(" #a ", " #b ", " #c ")"
#define IN_SMANY "fn(SMANY)"
#define IN_CMANY "fn(CMANY)"
#define IN_CUMANY "fn(CUMANY)"
#define IN_MFINAL "fn(MFINAL)"
#define IN_C_MFINAL(n) "fn(C_MFINAL<" #n ">)"
#define IN_FCALL(nin,nobj) "fn(FCIN<" #nin ", " #nobj ">)"

#define OUT_NOV ""
#define OUT_ONE(a) " -> " #a
#define OUT_TWO(a,b) " -> (" #a ", " #b ")"
#define OUT_THREE(a,b,c) " -> (" #a ", " #b ", " #c ")"
#define OUT_FCALL "-> FCOUT"

#define FLAGS_NF ""
#define FLAGS_CF ", CF"
#define FLAGS_TF ", TF"
#define FLAGS_CF_TF ", CF_TF"

#define O(name, imm, in, out, flags)\
  printf(\
    "    %s(%s[%s%s; 0]%s),\n",\
    fix_self(#name),\
    IMM_##imm,\
    IN_##in,\
    OUT_##out,\
    FLAGS_##flags);

// hhbc-gen/gen-rust.cpp:
//
// Print a Rust enum definition with one tuple variant for each opcode.
// The resulting enum definition contains all the information present
// in the C++ OPCODES macro, with the intention that downstream Rust
// code of various kinds can be generated by proc-macros from the single
// OPCODES-derived Rust enum.
//
// * Immediates translate to tuple fields whose types (ITA, LA, etc)
// are defined in rust as type aliases for the real shared type (IterArgs,
// LocalId, etc).
//
// * Input/output stack effects are expressed as a plain function pointer
// type, e.g. fn(CV,CV)->CV. To make this field zero-sized, we wrap it
// as a zero-length array: [fn(CV,CV)->CV; 0]. This field has no use
// for carrying data, but it preserves information present in the OPCODES
// macro. All stack effect types, like CV, SMANY, etc, are expressed
// as zero-sized types.
//
// * Flags are translated to zero-sized fields (one type per flag).
//
// Sample input:
//  O(IsTypeStructC,  ONE(OA(TypeStructResolveOp)),                     \
//                                     TWO(CV,CV),      ONE(CV),    NF) \
//  O(Switch,         THREE(OA(SwitchKind),I64A,BLA),                   \
//                                     ONE(CV),         NOV,     CF_TF) \
//
// Sample output:
//  IsTypeStructC(OA<TypeStructResolveOp>, [fn(CV, CV) -> CV; 0]),
//  Switch(OA<SwitchKind>, I64A, BLA, [fn(CV); 0], CF_TF),
//
int main(int, char**) {
  printf("// Copyright (c) Facebook, Inc. and its affiliates.\n");
  printf("//\n");
  printf("// This source code is licensed under the MIT license found in the\n");
  printf("// LICENSE file in the \"hack\" directory of this source tree.\n");
  printf("// %sgenerated by hhbc-dump.cpp\n", "@");
  printf("// buck2 run :gen-rust > hhbc.rs\n");
  printf("use crate::shared::*;\n");
  printf("pub enum Op {\n");
  OPCODES
  printf("}\n");
  return 0;
}
