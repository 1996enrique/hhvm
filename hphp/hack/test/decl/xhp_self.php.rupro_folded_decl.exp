--- ocaml
+++ rupro
@@ -1,87 +1,87 @@
 { Decl_defs.dc_need_init = false; dc_abstract = false; dc_final = true;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = (Cclass Concrete); dc_is_xhp = true; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\:Foo"; dc_pos = [5:13-17]; dc_tparams = [];
   dc_where_constraints = []; dc_substs = {};
   dc_consts =
   { "TProps" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [6:14-20];
       cc_type =
       (Rwitness_from_decl ([6:14-20]),
        (Tapply (([6:14-20], "\\HH\\TypeStructure"),
           [(Rwitness_from_decl ([6:14-20]),
             (Taccess
                ((Rwitness_from_decl ([6:14-20]), Tthis),
                 [([6:14-20], "TProps")])))
             ]
           )));
       cc_origin = "\\:Foo"; cc_refs = [] };
     "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [5:13-17];
       cc_type =
       (Rclass_class ([5:13-17]),
        (Tapply (([5:13-17], "\\HH\\classname"),
           [(Rclass_class ([5:13-17]), Tthis)])));
       cc_origin = "\\:Foo"; cc_refs = [] } };
   dc_typeconsts =
   { "TProps" ->
     { Typing_defs.ttc_synthesized = false; ttc_name = ([6:14-20], "TProps");
       ttc_kind =
       (Typing_defs.TCConcrete
          { Typing_defs.tc_type =
            (Rhint ([6:23-40]),
             (Tshape (Typing_defs_core.Closed_shape,
                { (Typing_defs_core.TSFlit_str ([6:29-32], "x")) ->
                  { sft_optional = false;
                    sft_ty = (Rhint ([6:36-39]), (Tprim Tint)) } }
                )))
            });
       ttc_origin = "\\:Foo"; ttc_enforceable = ([Pos.none], false);
       ttc_reifiable = None; ttc_concretized = false; ttc_is_ctx = false } };
   dc_props =
   { ":props" ->
     { Decl_defs.elt_flags =
       { "Abstract" -> false;
         "Const" -> false;
         "Dynamicallycallable" -> false;
         "Final" -> true;
         "Lateinit" -> false;
         "Lsb" -> false;
         "NeedsInit" -> true;
         "ReadonlyProp" -> false;
         "SuperfluousOverride" -> false;
         "SupportDynamicType" -> false;
         "Synthesized" -> false;
         "XaHasDefault" -> false;
         "XaTagLateinit" -> false;
         "XaTagRequired" -> true };
       elt_origin = "\\:Foo"; elt_visibility = Typing_defs_core.Vpublic;
       elt_deprecated = None } };
   dc_sprops = {};
   dc_methods =
   { "getProps" ->
     { Decl_defs.elt_flags =
       { "Abstract" -> false;
         "Const" -> false;
         "Dynamicallycallable" -> false;
         "Final" -> false;
         "Lateinit" -> false;
         "Lsb" -> false;
         "NeedsInit" -> false;
         "ReadonlyProp" -> false;
         "SuperfluousOverride" -> false;
         "SupportDynamicType" -> false;
         "Synthesized" -> false;
         "XaHasDefault" -> false;
         "XaTagLateinit" -> false;
         "XaTagRequired" -> false };
       elt_origin = "\\:Foo";
       elt_visibility = (Typing_defs_core.Vprotected "\\:Foo");
       elt_deprecated = None } };
-  dc_smethods = {}; dc_construct = (None, Typing_defs_core.FinalClass);
+  dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
   dc_ancestors = {}; dc_support_dynamic_type = false; dc_req_ancestors = [];
   dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
   dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque>; dc_condition_types = {} }
