{ Decl_defs.dc_need_init = false; dc_abstract = true; dc_final = false;
  dc_const = false; dc_internal = false; dc_deferred_init_members = {};
  dc_kind = Cinterface; dc_is_xhp = false; dc_has_xhp_keyword = false;
  dc_module = None; dc_name = "\\I"; dc_pos = [3:11-12]; dc_tparams = [];
  dc_where_constraints = []; dc_substs = {};
  dc_consts =
  { "T" ->
    { Typing_defs.cc_synthesized = true;
      cc_abstract = (Typing_defs.CCAbstract false); cc_pos = [4:41-42];
      cc_type =
      (Rwitness_from_decl ([4:41-42]),
       (Tapply (([4:41-42], "\\HH\\TypeStructure"),
          [(Rwitness_from_decl ([4:41-42]),
            (Taccess
               ((Rwitness_from_decl ([4:41-42]), Tthis), [([4:41-42], "T")])))
            ]
          )));
      cc_origin = "\\I"; cc_refs = [] };
    "class" ->
    { Typing_defs.cc_synthesized = true;
      cc_abstract = Typing_defs.CCConcrete; cc_pos = [3:11-12];
      cc_type =
      (Rclass_class ([3:11-12]),
       (Tapply (([3:11-12], "\\HH\\classname"),
          [(Rclass_class ([3:11-12]), Tthis)])));
      cc_origin = "\\I"; cc_refs = [] } };
  dc_typeconsts =
  { "T" ->
    { Typing_defs.ttc_synthesized = false; ttc_name = ([4:41-42], "T");
      ttc_kind =
      (Typing_defs.TCAbstract
         { Typing_defs.atc_as_constraint =
           (Some (Rhint ([4:46-54]), (Tprim Tarraykey)));
           atc_super_constraint = None; atc_default = None });
      ttc_origin = "\\I"; ttc_enforceable = ([4:5-18], true);
      ttc_reifiable = None; ttc_concretized = false; ttc_is_ctx = false } };
  dc_props = {}; dc_sprops = {}; dc_methods = {}; dc_smethods = {};
  dc_construct = (None, Typing_defs_core.Inconsistent); dc_ancestors = {};
  dc_support_dynamic_type = false; dc_req_ancestors = [];
  dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
  dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
  dc_decl_errors = <opaque>; dc_condition_types = {} }

They matched!
