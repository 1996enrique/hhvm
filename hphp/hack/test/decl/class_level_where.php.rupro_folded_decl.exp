--- ocaml
+++ rupro
@@ -1,95 +1,93 @@
 { Decl_defs.dc_need_init = false; dc_abstract = false; dc_final = false;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = (Cclass Concrete); dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\C"; dc_pos = [14:7-8]; dc_tparams = [];
   dc_where_constraints = []; dc_substs = {};
   dc_consts =
   { "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [14:7-8];
       cc_type =
       (Rclass_class ([14:7-8]),
        (Tapply (([14:7-8], "\\HH\\classname"),
           [(Rclass_class ([14:7-8]), Tthis)])));
       cc_origin = "\\C"; cc_refs = [] } };
   dc_typeconsts = {}; dc_props = {}; dc_sprops = {}; dc_methods = {};
   dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
   dc_ancestors = {}; dc_support_dynamic_type = false; dc_req_ancestors = [];
   dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
   dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque>; dc_condition_types = {} }
 { Decl_defs.dc_need_init = false; dc_abstract = true; dc_final = false;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = Cinterface; dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\I"; dc_pos = [16:11-12]; dc_tparams = [];
   dc_where_constraints =
   [((Rhint ([16:19-23]), Tthis), Constraint_as,
     (Rhint ([16:27-28]), (Tapply (([16:27-28], "\\C"), []))))];
   dc_substs = {};
   dc_consts =
   { "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [16:11-12];
       cc_type =
       (Rclass_class ([16:11-12]),
        (Tapply (([16:11-12], "\\HH\\classname"),
           [(Rclass_class ([16:11-12]), Tthis)])));
       cc_origin = "\\I"; cc_refs = [] } };
   dc_typeconsts = {}; dc_props = {}; dc_sprops = {}; dc_methods = {};
   dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
   dc_ancestors = {}; dc_support_dynamic_type = false; dc_req_ancestors = [];
   dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
   dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque>; dc_condition_types = {} }
 { Decl_defs.dc_need_init = false; dc_abstract = true; dc_final = false;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = Ctrait; dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\PartialC"; dc_pos = [18:7-15];
   dc_tparams = [];
   dc_where_constraints =
   [((Rhint ([18:35-39]), Tthis), Constraint_eq,
     (Rhint ([18:42-43]), (Tapply (([18:42-43], "\\C"), []))))];
   dc_substs =
   { "\\I" ->
     { Decl_defs.sc_subst = {}; sc_class_context = "\\PartialC";
       sc_from_req_extends = false } };
   dc_consts =
   { "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [18:7-15];
       cc_type =
       (Rclass_class ([18:7-15]),
        (Tapply (([18:7-15], "\\HH\\classname"),
           [(Rclass_class ([18:7-15]), Tthis)])));
       cc_origin = "\\PartialC"; cc_refs = [] } };
   dc_typeconsts = {}; dc_props = {}; dc_sprops = {}; dc_methods = {};
   dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
-  dc_ancestors =
-  { "\\I" -> (Rhint ([18:27-28]), (Tapply (([18:27-28], "\\I"), []))) };
-  dc_support_dynamic_type = false; dc_req_ancestors = [];
+  dc_ancestors = {}; dc_support_dynamic_type = false; dc_req_ancestors = [];
   dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
   dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque>; dc_condition_types = {} }
 { Decl_defs.dc_need_init = false; dc_abstract = true; dc_final = false;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = Cinterface; dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\J"; dc_pos = [20:11-12]; dc_tparams = [];
   dc_where_constraints =
   [((Rhint ([20:19-20]), (Tapply (([20:19-20], "\\C"), []))),
     Constraint_super, (Rhint ([20:27-31]), Tthis))];
   dc_substs = {};
   dc_consts =
   { "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [20:11-12];
       cc_type =
       (Rclass_class ([20:11-12]),
        (Tapply (([20:11-12], "\\HH\\classname"),
           [(Rclass_class ([20:11-12]), Tthis)])));
       cc_origin = "\\J"; cc_refs = [] } };
   dc_typeconsts = {}; dc_props = {}; dc_sprops = {}; dc_methods = {};
   dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
   dc_ancestors = {}; dc_support_dynamic_type = false; dc_req_ancestors = [];
   dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
   dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque>; dc_condition_types = {} }
