--- ocaml
+++ rupro
@@ -1,182 +1,155 @@
 { Decl_defs.dc_need_init = false; dc_abstract = true; dc_final = false;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = Cenum; dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\A"; dc_pos = [3:6-7]; dc_tparams = [];
   dc_where_constraints = []; dc_substs = {};
   dc_consts =
   { "X" ->
     { Typing_defs.cc_synthesized = false;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [3:28-29];
-      cc_type = (Rhint ([3:10-16]), (Tapply (([3:6-7], "\\A"), [])));
+      cc_type = (Rwitness_from_decl ([3:30-33]), (Tprim Tstring));
       cc_origin = "\\A"; cc_refs = [] };
     "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [3:6-7];
       cc_type =
       (Rclass_class ([3:6-7]),
        (Tapply (([3:6-7], "\\HH\\classname"),
           [(Rclass_class ([3:6-7]), Tthis)])));
       cc_origin = "\\A"; cc_refs = [] } };
   dc_typeconsts = {}; dc_props = {}; dc_sprops = {}; dc_methods = {};
   dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
   dc_ancestors =
   { "\\HH\\BuiltinEnum" ->
     (Rhint ([3:6-7]),
      (Tapply (([3:6-7], "\\HH\\BuiltinEnum"),
         [(Rhint ([3:6-7]), (Tapply (([3:6-7], "\\A"), [])))]))) };
   dc_support_dynamic_type = false; dc_req_ancestors = [];
-  dc_req_ancestors_extends = {}; dc_extends = { "\\HH\\BuiltinEnum" };
-  dc_sealed_whitelist = None; dc_xhp_attr_deps = {}; dc_xhp_enum_values = {};
-  dc_enum_type =
-  (Some { Typing_defs.te_base = (Rhint ([3:10-16]), (Tprim Tstring));
-          te_constraint = (Some (Rhint ([3:20-26]), (Tprim Tstring)));
-          te_includes = [] });
+  dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
+  dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque>; dc_condition_types = {} }
 { Decl_defs.dc_need_init = false; dc_abstract = true; dc_final = false;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = Cenum; dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\B"; dc_pos = [5:6-7]; dc_tparams = [];
   dc_where_constraints = []; dc_substs = {};
   dc_consts =
   { "X" ->
     { Typing_defs.cc_synthesized = false;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [5:26-27];
-      cc_type = (Rhint ([5:10-13]), (Tapply (([5:6-7], "\\B"), [])));
+      cc_type = (Rwitness_from_decl ([5:28-29]), (Tprim Tint));
       cc_origin = "\\B"; cc_refs = [] };
     "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [5:6-7];
       cc_type =
       (Rclass_class ([5:6-7]),
        (Tapply (([5:6-7], "\\HH\\classname"),
           [(Rclass_class ([5:6-7]), Tthis)])));
       cc_origin = "\\B"; cc_refs = [] } };
   dc_typeconsts = {}; dc_props = {}; dc_sprops = {}; dc_methods = {};
   dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
   dc_ancestors =
   { "\\HH\\BuiltinEnum" ->
     (Rhint ([5:6-7]),
      (Tapply (([5:6-7], "\\HH\\BuiltinEnum"),
         [(Rhint ([5:6-7]), (Tapply (([5:6-7], "\\B"), [])))]))) };
   dc_support_dynamic_type = false; dc_req_ancestors = [];
-  dc_req_ancestors_extends = {}; dc_extends = { "\\HH\\BuiltinEnum" };
-  dc_sealed_whitelist = None; dc_xhp_attr_deps = {}; dc_xhp_enum_values = {};
-  dc_enum_type =
-  (Some { Typing_defs.te_base = (Rhint ([5:10-13]), (Tprim Tint));
-          te_constraint =
-          (Some (Rhint ([5:17-24]),
-                 (Tapply (([5:17-21], "\\IdOf"),
-                    [(Rhint ([5:22-23]), (Tapply (([5:22-23], "\\X"), [])))]
-                    ))));
-          te_includes = [] });
+  dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
+  dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque>; dc_condition_types = {} }
 { Decl_defs.dc_need_init = false; dc_abstract = true; dc_final = false;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = Cenum; dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\C"; dc_pos = [7:6-7]; dc_tparams = [];
   dc_where_constraints = []; dc_substs = {};
   dc_consts =
   { "X" ->
     { Typing_defs.cc_synthesized = false;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [7:27-28];
-      cc_type = (Rhint ([7:10-13]), (Tapply (([7:6-7], "\\C"), [])));
+      cc_type = (Rwitness_from_decl ([7:29-30]), (Tprim Tint));
       cc_origin = "\\C"; cc_refs = [] };
     "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [7:6-7];
       cc_type =
       (Rclass_class ([7:6-7]),
        (Tapply (([7:6-7], "\\HH\\classname"),
           [(Rclass_class ([7:6-7]), Tthis)])));
       cc_origin = "\\C"; cc_refs = [] } };
   dc_typeconsts = {}; dc_props = {}; dc_sprops = {}; dc_methods = {};
   dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
   dc_ancestors =
   { "\\HH\\BuiltinEnum" ->
     (Rhint ([7:6-7]),
      (Tapply (([7:6-7], "\\HH\\BuiltinEnum"),
         [(Rhint ([7:6-7]), (Tapply (([7:6-7], "\\C"), [])))]))) };
   dc_support_dynamic_type = false; dc_req_ancestors = [];
-  dc_req_ancestors_extends = {}; dc_extends = { "\\HH\\BuiltinEnum" };
-  dc_sealed_whitelist = None; dc_xhp_attr_deps = {}; dc_xhp_enum_values = {};
-  dc_enum_type =
-  (Some { Typing_defs.te_base = (Rhint ([7:10-13]), (Tprim Tint));
-          te_constraint = (Some (Rhint ([7:17-25]), (Tprim Tarraykey)));
-          te_includes = [] });
+  dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
+  dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque>; dc_condition_types = {} }
 { Decl_defs.dc_need_init = false; dc_abstract = true; dc_final = false;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = Cenum; dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\D"; dc_pos = [11:6-7]; dc_tparams = [];
   dc_where_constraints = []; dc_substs = {};
   dc_consts =
   { "X" ->
     { Typing_defs.cc_synthesized = false;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [11:20-21];
-      cc_type = (Rhint ([11:10-13]), (Tapply (([11:6-7], "\\D"), [])));
+      cc_type = (Rwitness_from_decl ([11:22-23]), (Tprim Tint));
       cc_origin = "\\D"; cc_refs = [] };
     "Y" ->
     { Typing_defs.cc_synthesized = false;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [11:25-26];
-      cc_type = (Rhint ([11:10-13]), (Tapply (([11:6-7], "\\D"), [])));
+      cc_type = (Rwitness_from_decl ([11:27-30]), (Tprim Tstring));
       cc_origin = "\\D"; cc_refs = [] };
     "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [11:6-7];
       cc_type =
       (Rclass_class ([11:6-7]),
        (Tapply (([11:6-7], "\\HH\\classname"),
           [(Rclass_class ([11:6-7]), Tthis)])));
       cc_origin = "\\D"; cc_refs = [] } };
   dc_typeconsts = {}; dc_props = {}; dc_sprops = {}; dc_methods = {};
   dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
   dc_ancestors =
   { "\\HH\\BuiltinEnum" ->
     (Rhint ([11:6-7]),
      (Tapply (([11:6-7], "\\HH\\BuiltinEnum"),
         [(Rhint ([11:6-7]), (Tapply (([11:6-7], "\\D"), [])))]))) };
   dc_support_dynamic_type = false; dc_req_ancestors = [];
-  dc_req_ancestors_extends = {}; dc_extends = { "\\HH\\BuiltinEnum" };
-  dc_sealed_whitelist = None; dc_xhp_attr_deps = {}; dc_xhp_enum_values = {};
-  dc_enum_type =
-  (Some { Typing_defs.te_base = (Rhint ([11:10-13]), (Tprim Tint));
-          te_constraint =
-          (Some (Rhint ([11:17-18]), (Tapply (([11:17-18], "\\N"), []))));
-          te_includes = [] });
+  dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
+  dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque>; dc_condition_types = {} }
 { Decl_defs.dc_need_init = false; dc_abstract = true; dc_final = false;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = Cenum; dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\E"; dc_pos = [13:6-7]; dc_tparams = [];
   dc_where_constraints = []; dc_substs = {};
   dc_consts =
   { "X" ->
     { Typing_defs.cc_synthesized = false;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [13:18-19];
-      cc_type = (Rhint ([13:10-11]), (Tapply (([13:6-7], "\\E"), [])));
-      cc_origin = "\\E"; cc_refs = [((Typing_defs.From "\\C"), "X")] };
+      cc_type = (Rwitness_from_decl ([13:18-19]), Tany); cc_origin = "\\E";
+      cc_refs = [((Typing_defs.From "\\C"), "X")] };
     "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [13:6-7];
       cc_type =
       (Rclass_class ([13:6-7]),
        (Tapply (([13:6-7], "\\HH\\classname"),
           [(Rclass_class ([13:6-7]), Tthis)])));
       cc_origin = "\\E"; cc_refs = [] } };
   dc_typeconsts = {}; dc_props = {}; dc_sprops = {}; dc_methods = {};
   dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
   dc_ancestors =
   { "\\HH\\BuiltinEnum" ->
     (Rhint ([13:6-7]),
      (Tapply (([13:6-7], "\\HH\\BuiltinEnum"),
         [(Rhint ([13:6-7]), (Tapply (([13:6-7], "\\E"), [])))]))) };
   dc_support_dynamic_type = false; dc_req_ancestors = [];
-  dc_req_ancestors_extends = {}; dc_extends = { "\\HH\\BuiltinEnum" };
-  dc_sealed_whitelist = None; dc_xhp_attr_deps = {}; dc_xhp_enum_values = {};
-  dc_enum_type =
-  (Some { Typing_defs.te_base =
-          (Rhint ([13:10-11]), (Tapply (([13:10-11], "\\C"), [])));
-          te_constraint =
-          (Some (Rhint ([13:15-16]), (Tapply (([13:15-16], "\\C"), []))));
-          te_includes = [] });
+  dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
+  dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque>; dc_condition_types = {} }
