--- ocaml
+++ rupro
@@ -1,77 +1,59 @@
-{ Decl_defs.dc_need_init = true; dc_abstract = false; dc_final = false;
+{ Decl_defs.dc_need_init = false; dc_abstract = false; dc_final = false;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = (Cclass Concrete); dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\C"; dc_pos = [3:7-8]; dc_tparams = [];
   dc_where_constraints = []; dc_substs = {};
   dc_consts =
   { "T" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [4:14-15];
       cc_type =
       (Rwitness_from_decl ([4:14-15]),
        (Tapply (([4:14-15], "\\HH\\TypeStructure"),
           [(Rwitness_from_decl ([4:14-15]),
             (Taccess
                ((Rwitness_from_decl ([4:14-15]), Tthis), [([4:14-15], "T")])))
             ]
           )));
       cc_origin = "\\C"; cc_refs = [] };
     "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [3:7-8];
       cc_type =
       (Rclass_class ([3:7-8]),
        (Tapply (([3:7-8], "\\HH\\classname"),
           [(Rclass_class ([3:7-8]), Tthis)])));
       cc_origin = "\\C"; cc_refs = [] } };
   dc_typeconsts =
   { "T" ->
     { Typing_defs.ttc_synthesized = false; ttc_name = ([4:14-15], "T");
       ttc_kind =
       (Typing_defs.TCConcrete
          { Typing_defs.tc_type = (Rhint ([4:18-21]), (Tprim Tint)) });
       ttc_origin = "\\C"; ttc_enforceable = ([Pos.none], false);
       ttc_reifiable = None; ttc_concretized = false; ttc_is_ctx = false } };
   dc_props =
   { "a" ->
     { Decl_defs.elt_flags =
       { "Abstract" -> false;
         "Const" -> false;
         "Dynamicallycallable" -> false;
         "Final" -> true;
         "Lateinit" -> false;
         "Lsb" -> false;
         "NeedsInit" -> true;
         "ReadonlyProp" -> false;
         "SuperfluousOverride" -> false;
         "SupportDynamicType" -> false;
         "Synthesized" -> false;
         "XaHasDefault" -> false;
         "XaTagLateinit" -> false;
         "XaTagRequired" -> false };
       elt_origin = "\\C"; elt_visibility = (Typing_defs_core.Vprivate "\\C");
       elt_deprecated = None } };
   dc_sprops = {}; dc_methods = {}; dc_smethods = {};
-  dc_construct =
-  ((Some { Decl_defs.elt_flags =
-           { "Abstract" -> false;
-             "Const" -> false;
-             "Dynamicallycallable" -> false;
-             "Final" -> false;
-             "Lateinit" -> false;
-             "Lsb" -> false;
-             "NeedsInit" -> false;
-             "ReadonlyProp" -> false;
-             "SuperfluousOverride" -> false;
-             "SupportDynamicType" -> false;
-             "Synthesized" -> false;
-             "XaHasDefault" -> false;
-             "XaTagLateinit" -> false;
-             "XaTagRequired" -> false };
-           elt_origin = "\\C"; elt_visibility = Typing_defs_core.Vpublic;
-           elt_deprecated = None }),
-   Typing_defs_core.Inconsistent);
-  dc_ancestors = {}; dc_support_dynamic_type = false; dc_req_ancestors = [];
+  dc_construct = (None, Typing_defs_core.Inconsistent); dc_ancestors = {};
+  dc_support_dynamic_type = false; dc_req_ancestors = [];
   dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
   dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque>; dc_condition_types = {} }
