--- ocaml
+++ rupro
@@ -1,40 +1,40 @@
 { Decl_defs.dc_need_init = false; dc_abstract = false; dc_final = false;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = (Cclass Concrete); dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\NS1\\NS2\\C"; dc_pos = [8:13-14];
   dc_tparams = []; dc_where_constraints = []; dc_substs = {};
   dc_consts =
   { "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [8:13-14];
       cc_type =
       (Rclass_class ([8:13-14]),
        (Tapply (([8:13-14], "\\HH\\classname"),
           [(Rclass_class ([8:13-14]), Tthis)])));
       cc_origin = "\\NS1\\NS2\\C"; cc_refs = [] } };
   dc_typeconsts = {}; dc_props = {}; dc_sprops = {}; dc_methods = {};
   dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
   dc_ancestors = {}; dc_support_dynamic_type = false; dc_req_ancestors = [];
   dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
   dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque> }
 { Decl_defs.dc_need_init = false; dc_abstract = false; dc_final = false;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = (Cclass Concrete); dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\D"; dc_pos = [19:9-10]; dc_tparams = [];
   dc_where_constraints = []; dc_substs = {};
   dc_consts =
   { "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [19:9-10];
       cc_type =
       (Rclass_class ([19:9-10]),
        (Tapply (([19:9-10], "\\HH\\classname"),
           [(Rclass_class ([19:9-10]), Tthis)])));
       cc_origin = "\\D"; cc_refs = [] } };
   dc_typeconsts = {}; dc_props = {}; dc_sprops = {}; dc_methods = {};
   dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
   dc_ancestors = {}; dc_support_dynamic_type = false; dc_req_ancestors = [];
-  dc_req_ancestors_extends = {}; dc_extends = {};
-  dc_sealed_whitelist = (Some { "\\NS1\\NS2\\C" }); dc_xhp_attr_deps = {};
-  dc_xhp_enum_values = {}; dc_enum_type = None; dc_decl_errors = <opaque> }
+  dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
+  dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
+  dc_decl_errors = <opaque> }
