{ Decl_defs.dc_need_init = false; dc_abstract = true; dc_final = false;
  dc_const = false; dc_internal = false; dc_deferred_init_members = {};
  dc_kind = Cinterface; dc_is_xhp = false; dc_has_xhp_keyword = false;
  dc_module = None; dc_name = "\\I"; dc_pos = [6:11-12];
  dc_tparams =
  [{ Typing_defs_core.tp_variance = Invariant; tp_name = ([7:3-5], "Ta");
     tp_tparams = [];
     tp_constraints =
     [(Constraint_as, (Rhint ([7:9-17]), (Tprim Tarraykey)))];
     tp_reified = Erased; tp_user_attributes = [] };
    { Typing_defs_core.tp_variance = Invariant; tp_name = ([8:3-5], "Tb");
      tp_tparams = [];
      tp_constraints =
      [(Constraint_as,
        (Rhint ([8:9-20]),
         (Tapply (([8:9-12], "\\HH\\Map"),
            [(Rhint ([8:13-15]), (Tgeneric ("Ta", [])));
              (Rhint ([8:17-19]), (Tgeneric ("Td", [])))]
            ))))
        ];
      tp_reified = Erased; tp_user_attributes = [] };
    { Typing_defs_core.tp_variance = Invariant; tp_name = ([9:3-5], "Tc");
      tp_tparams = [];
      tp_constraints =
      [(Constraint_as,
        (Rhint ([9:9-22]),
         (Tapply (([9:9-12], "\\HH\\Map"),
            [(Rhint ([9:13-16]), (Tapply (([9:13-16], "\\Ta"), [])));
              (Rhint ([9:18-21]), (Tapply (([9:18-21], "\\Td"), [])))]
            ))))
        ];
      tp_reified = Erased; tp_user_attributes = [] };
    { Typing_defs_core.tp_variance = Invariant; tp_name = ([10:3-5], "Td");
      tp_tparams = []; tp_constraints = []; tp_reified = Erased;
      tp_user_attributes = [] }
    ];
  dc_where_constraints = []; dc_substs = {};
  dc_consts =
  { "class" ->
    { Typing_defs.cc_synthesized = true;
      cc_abstract = Typing_defs.CCConcrete; cc_pos = [6:11-12];
      cc_type =
      (Rclass_class ([6:11-12]),
       (Tapply (([6:11-12], "\\HH\\classname"),
          [(Rclass_class ([6:11-12]), Tthis)])));
      cc_origin = "\\I"; cc_refs = [] } };
  dc_typeconsts = {}; dc_props = {}; dc_sprops = {}; dc_methods = {};
  dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
  dc_ancestors = {}; dc_support_dynamic_type = false; dc_req_ancestors = [];
  dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
  dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
  dc_decl_errors = <opaque> }

They matched!
