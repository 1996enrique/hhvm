--- ocaml
+++ rupro
@@ -1,40 +1,40 @@
 { Decl_defs.dc_need_init = false; dc_abstract = false; dc_final = true;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = (Cclass Concrete); dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\P"; dc_pos = [3:13-14]; dc_tparams = [];
   dc_where_constraints = []; dc_substs = {};
   dc_consts =
   { "C" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [4:13-14];
       cc_type =
       (Rwitness_from_decl ([4:13-14]),
        (Tapply (([4:13-14], "\\HH\\TypeStructure"),
           [(Rwitness_from_decl ([4:13-14]),
             (Taccess
                ((Rwitness_from_decl ([4:13-14]), Tthis), [([4:13-14], "C")])))
             ]
           )));
       cc_origin = "\\P"; cc_refs = [] };
     "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [3:13-14];
       cc_type =
       (Rclass_class ([3:13-14]),
        (Tapply (([3:13-14], "\\HH\\classname"),
           [(Rclass_class ([3:13-14]), Tthis)])));
       cc_origin = "\\P"; cc_refs = [] } };
   dc_typeconsts =
   { "C" ->
     { Typing_defs.ttc_synthesized = false; ttc_name = ([4:13-14], "C");
       ttc_kind =
       (Typing_defs.TCConcrete
          { Typing_defs.tc_type = (Rhint ([4:17-19]), (Tintersection [])) });
       ttc_origin = "\\P"; ttc_enforceable = ([Pos.none], false);
       ttc_reifiable = None; ttc_concretized = false; ttc_is_ctx = true } };
   dc_props = {}; dc_sprops = {}; dc_methods = {}; dc_smethods = {};
-  dc_construct = (None, Typing_defs_core.FinalClass); dc_ancestors = {};
+  dc_construct = (None, Typing_defs_core.Inconsistent); dc_ancestors = {};
   dc_support_dynamic_type = false; dc_req_ancestors = [];
   dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
   dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque> }
