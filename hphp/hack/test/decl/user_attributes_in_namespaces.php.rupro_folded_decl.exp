--- ocaml
+++ rupro
@@ -1,66 +1,60 @@
 { Decl_defs.dc_need_init = false; dc_abstract = false; dc_final = false;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = (Cclass Concrete); dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\X\\Foo"; dc_pos = [4:9-12]; dc_tparams = [];
   dc_where_constraints = []; dc_substs = {};
   dc_consts =
   { "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [4:9-12];
       cc_type =
       (Rclass_class ([4:9-12]),
        (Tapply (([4:9-12], "\\HH\\classname"),
           [(Rclass_class ([4:9-12]), Tthis)])));
       cc_origin = "\\X\\Foo"; cc_refs = [] } };
   dc_typeconsts = {}; dc_props = {}; dc_sprops = {}; dc_methods = {};
   dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
-  dc_ancestors =
-  { "\\HH\\ClassAttribute" ->
-    (Rhint ([4:24-42]), (Tapply (([4:24-42], "\\HH\\ClassAttribute"), []))) };
-  dc_support_dynamic_type = false; dc_req_ancestors = [];
+  dc_ancestors = {}; dc_support_dynamic_type = false; dc_req_ancestors = [];
   dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
   dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque> }
 { Decl_defs.dc_need_init = false; dc_abstract = false; dc_final = false;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = (Cclass Concrete); dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\X\\Y\\Bar"; dc_pos = [7:11-14];
   dc_tparams = []; dc_where_constraints = []; dc_substs = {};
   dc_consts =
   { "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [7:11-14];
       cc_type =
       (Rclass_class ([7:11-14]),
        (Tapply (([7:11-14], "\\HH\\classname"),
           [(Rclass_class ([7:11-14]), Tthis)])));
       cc_origin = "\\X\\Y\\Bar"; cc_refs = [] } };
   dc_typeconsts = {}; dc_props = {}; dc_sprops = {}; dc_methods = {};
   dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
-  dc_ancestors =
-  { "\\HH\\ClassAttribute" ->
-    (Rhint ([7:26-44]), (Tapply (([7:26-44], "\\HH\\ClassAttribute"), []))) };
-  dc_support_dynamic_type = false; dc_req_ancestors = [];
+  dc_ancestors = {}; dc_support_dynamic_type = false; dc_req_ancestors = [];
   dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
   dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque> }
 { Decl_defs.dc_need_init = false; dc_abstract = false; dc_final = false;
   dc_const = false; dc_internal = false; dc_deferred_init_members = {};
   dc_kind = (Cclass Concrete); dc_is_xhp = false; dc_has_xhp_keyword = false;
   dc_module = None; dc_name = "\\X\\C"; dc_pos = [11:9-10]; dc_tparams = [];
   dc_where_constraints = []; dc_substs = {};
   dc_consts =
   { "class" ->
     { Typing_defs.cc_synthesized = true;
       cc_abstract = Typing_defs.CCConcrete; cc_pos = [11:9-10];
       cc_type =
       (Rclass_class ([11:9-10]),
        (Tapply (([11:9-10], "\\HH\\classname"),
           [(Rclass_class ([11:9-10]), Tthis)])));
       cc_origin = "\\X\\C"; cc_refs = [] } };
   dc_typeconsts = {}; dc_props = {}; dc_sprops = {}; dc_methods = {};
   dc_smethods = {}; dc_construct = (None, Typing_defs_core.Inconsistent);
   dc_ancestors = {}; dc_support_dynamic_type = false; dc_req_ancestors = [];
   dc_req_ancestors_extends = {}; dc_extends = {}; dc_sealed_whitelist = None;
   dc_xhp_attr_deps = {}; dc_xhp_enum_values = {}; dc_enum_type = None;
   dc_decl_errors = <opaque> }
