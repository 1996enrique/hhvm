--- ocaml
+++ rupro
@@ -1,465 +1,471 @@
 FoldedClass {
     name: "\\C",
     pos: Pos(root|this_refine_shape_index_2.php, 4:16-17),
     kind: Cclass(
         Abstract,
     ),
     props: {
         "item": FoldedElement {
             flags: FINAL | NEEDS_INIT,
             origin: "\\C",
             visibility: Protected(
                 "\\C",
             ),
             deprecated: None,
         },
     },
     constructor: (
         FoldedElement {
             flags: (empty),
             origin: "\\C",
             visibility: Public,
             deprecated: None,
         },
         Inconsistent,
     ),
     consts: {
         "TSchemaShape": ClassConst {
             is_synthesized: true,
             kind: CCAbstract(
                 false,
             ),
             pos: Pos(root|this_refine_shape_index_2.php, 5:23-35),
             ty: HH\TypeStructure<this::TSchemaShape>,
             origin: "\\C",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|this_refine_shape_index_2.php, 4:16-17),
             ty: HH\classname<this>,
             origin: "\\C",
             refs: [],
         },
     },
     type_consts: {
         "TSchemaShape": TypeConst {
             is_synthesized: false,
             name: (
                 Pos(root|this_refine_shape_index_2.php, 5:23-35),
                 "TSchemaShape",
             ),
             kind: AbstractTypeconst {
                 as_constraint: Some(
                     shape(...),
                 ),
                 super_constraint: None,
                 default: None,
             },
             origin: "\\C",
             enforceable: None,
             reifiable: None,
             is_concretized: false,
             is_ctx: false,
         },
     },
 }
 FoldedClass {
     name: "\\B",
     pos: Pos(root|this_refine_shape_index_2.php, 9:16-17),
     kind: Cclass(
         Abstract,
     ),
     substs: {
         "\\C": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\B",
             from_req_extends: false,
         },
     },
     ancestors: {
         "\\C": C,
     },
     props: {
         "item": FoldedElement {
             flags: FINAL | NEEDS_INIT,
             origin: "\\C",
             visibility: Protected(
                 "\\C",
             ),
             deprecated: None,
         },
     },
     constructor: (
         FoldedElement {
             flags: (empty),
             origin: "\\C",
             visibility: Public,
             deprecated: None,
         },
         Inconsistent,
     ),
     consts: {
         "TSchemaShape": ClassConst {
             is_synthesized: true,
             kind: CCAbstract(
                 false,
             ),
             pos: Pos(root|this_refine_shape_index_2.php, 5:23-35),
             ty: HH\TypeStructure<this::TSchemaShape>,
             origin: "\\C",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|this_refine_shape_index_2.php, 9:16-17),
             ty: HH\classname<this>,
             origin: "\\B",
             refs: [],
         },
     },
     type_consts: {
         "TSchemaShape": TypeConst {
             is_synthesized: false,
             name: (
                 Pos(root|this_refine_shape_index_2.php, 5:23-35),
                 "TSchemaShape",
             ),
             kind: AbstractTypeconst {
                 as_constraint: Some(
                     shape(...),
                 ),
                 super_constraint: None,
                 default: None,
             },
             origin: "\\C",
             enforceable: None,
             reifiable: None,
             is_concretized: false,
             is_ctx: false,
         },
     },
     extends: {
         "\\C",
     },
+    deferred_init_members: {
+        "parent::__construct",
+    },
 }
 FoldedClass {
     name: "\\I",
     pos: Pos(root|this_refine_shape_index_2.php, 12:11-12),
     kind: Cinterface,
     substs: {
         "\\C": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\I",
             from_req_extends: true,
         },
     },
     props: {
         "item": FoldedElement {
             flags: FINAL | SYNTHESIZED | NEEDS_INIT,
             origin: "\\C",
             visibility: Protected(
                 "\\C",
             ),
             deprecated: None,
         },
     },
     constructor: (
         FoldedElement {
             flags: SYNTHESIZED,
             origin: "\\C",
             visibility: Public,
             deprecated: None,
         },
         Inconsistent,
     ),
     consts: {
         "TSchemaShape": ClassConst {
             is_synthesized: true,
             kind: CCAbstract(
                 false,
             ),
             pos: Pos(root|this_refine_shape_index_2.php, 5:23-35),
             ty: HH\TypeStructure<this::TSchemaShape>,
             origin: "\\C",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|this_refine_shape_index_2.php, 12:11-12),
             ty: HH\classname<this>,
             origin: "\\I",
             refs: [],
         },
     },
     type_consts: {
         "TSchemaShape": TypeConst {
             is_synthesized: true,
             name: (
                 Pos(root|this_refine_shape_index_2.php, 5:23-35),
                 "TSchemaShape",
             ),
             kind: AbstractTypeconst {
                 as_constraint: Some(
                     shape(...),
                 ),
                 super_constraint: None,
                 default: None,
             },
             origin: "\\C",
             enforceable: None,
             reifiable: None,
             is_concretized: false,
             is_ctx: false,
         },
     },
     req_ancestors: [
         Requirement(
             Pos(root|this_refine_shape_index_2.php, 13:19-20),
             C,
         ),
     ],
     req_ancestors_extends: {
         "\\C",
     },
 }
 FoldedClass {
     name: "\\A",
     pos: Pos(root|this_refine_shape_index_2.php, 15:16-17),
     kind: Cclass(
         Abstract,
     ),
     substs: {
         "\\B": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\A",
             from_req_extends: false,
         },
         "\\C": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\B",
             from_req_extends: false,
         },
     },
     ancestors: {
         "\\B": B,
         "\\C": C,
     },
     props: {
         "item": FoldedElement {
             flags: FINAL | NEEDS_INIT,
             origin: "\\C",
             visibility: Protected(
                 "\\C",
             ),
             deprecated: None,
         },
     },
     constructor: (
         FoldedElement {
             flags: (empty),
             origin: "\\C",
             visibility: Public,
             deprecated: None,
         },
         Inconsistent,
     ),
     consts: {
         "TSchemaShape": ClassConst {
             is_synthesized: true,
             kind: CCAbstract(
                 false,
             ),
             pos: Pos(root|this_refine_shape_index_2.php, 16:23-35),
             ty: HH\TypeStructure<this::TSchemaShape>,
             origin: "\\A",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|this_refine_shape_index_2.php, 15:16-17),
             ty: HH\classname<this>,
             origin: "\\A",
             refs: [],
         },
     },
     type_consts: {
         "TSchemaShape": TypeConst {
             is_synthesized: false,
             name: (
                 Pos(root|this_refine_shape_index_2.php, 16:23-35),
                 "TSchemaShape",
             ),
             kind: AbstractTypeconst {
                 as_constraint: Some(
                     shape('a' => int, ...),
                 ),
                 super_constraint: None,
                 default: None,
             },
             origin: "\\A",
             enforceable: None,
             reifiable: None,
             is_concretized: false,
             is_ctx: false,
         },
     },
     extends: {
         "\\B",
         "\\C",
     },
+    deferred_init_members: {
+        "parent::__construct",
+    },
 }
 FoldedClass {
     name: "\\F",
     pos: Pos(root|this_refine_shape_index_2.php, 18:13-14),
     kind: Cclass(
         Concrete,
     ),
     is_final: true,
     consts: {
         "TSchemaShape": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|this_refine_shape_index_2.php, 19:14-26),
             ty: HH\TypeStructure<this::TSchemaShape>,
             origin: "\\F",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|this_refine_shape_index_2.php, 18:13-14),
             ty: HH\classname<this>,
             origin: "\\F",
             refs: [],
         },
     },
     type_consts: {
         "TSchemaShape": TypeConst {
             is_synthesized: false,
             name: (
                 Pos(root|this_refine_shape_index_2.php, 19:14-26),
                 "TSchemaShape",
             ),
             kind: ConcreteTypeconst {
                 ty: shape('a' => int, 'b' => string),
             },
             origin: "\\F",
             enforceable: None,
             reifiable: None,
             is_concretized: false,
             is_ctx: false,
         },
     },
 }
 FoldedClass {
     name: "\\TR",
     pos: Pos(root|this_refine_shape_index_2.php, 21:7-9),
     kind: Ctrait,
     substs: {
         "\\C": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\I",
             from_req_extends: true,
         },
         "\\I": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\TR",
             from_req_extends: false,
         },
     },
     props: {
         "item": FoldedElement {
             flags: FINAL | SYNTHESIZED | NEEDS_INIT,
             origin: "\\C",
             visibility: Protected(
                 "\\C",
             ),
             deprecated: None,
         },
     },
     methods: {
         "testit": FoldedElement {
             flags: (empty),
             origin: "\\TR",
             visibility: Public,
             deprecated: None,
         },
     },
     constructor: (
         FoldedElement {
             flags: SYNTHESIZED,
             origin: "\\C",
             visibility: Public,
             deprecated: None,
         },
         Inconsistent,
     ),
     consts: {
         "TSchemaShape": ClassConst {
             is_synthesized: true,
             kind: CCAbstract(
                 false,
             ),
             pos: Pos(root|this_refine_shape_index_2.php, 5:23-35),
             ty: HH\TypeStructure<this::TSchemaShape>,
             origin: "\\C",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|this_refine_shape_index_2.php, 21:7-9),
             ty: HH\classname<this>,
             origin: "\\TR",
             refs: [],
         },
     },
     type_consts: {
         "TSchemaShape": TypeConst {
             is_synthesized: true,
             name: (
                 Pos(root|this_refine_shape_index_2.php, 5:23-35),
                 "TSchemaShape",
             ),
             kind: AbstractTypeconst {
                 as_constraint: Some(
                     shape(...),
                 ),
                 super_constraint: None,
                 default: None,
             },
             origin: "\\C",
             enforceable: None,
             reifiable: None,
             is_concretized: false,
             is_ctx: false,
         },
     },
     req_ancestors: [
         Requirement(
             Pos(root|this_refine_shape_index_2.php, 22:22-23),
             I,
         ),
     ],
     req_ancestors_extends: {
         "\\C",
         "\\I",
     },
 }
