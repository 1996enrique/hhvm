--- ocaml
+++ rupro
@@ -1,479 +1,488 @@
 FoldedClass {
     name: "\\Base",
     pos: Pos(root|tany_ambiguous.php, 7:16-20),
     kind: Cclass(
         Abstract,
     ),
     props: {
         "data": FoldedElement {
             flags: FINAL | NEEDS_INIT,
             origin: "\\Base",
             visibility: Protected(
                 "\\Base",
             ),
             deprecated: None,
         },
     },
     methods: {
         "getData": FoldedElement {
             flags: FINAL,
             origin: "\\Base",
             visibility: Protected(
                 "\\Base",
             ),
             deprecated: None,
         },
     },
     constructor: (
         FoldedElement {
             flags: (empty),
             origin: "\\Base",
             visibility: Private(
                 "\\Base",
             ),
             deprecated: None,
         },
         Inconsistent,
     ),
     consts: {
         "TData": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|tany_ambiguous.php, 8:14-19),
             ty: HH\TypeStructure<this::TData>,
             origin: "\\Base",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|tany_ambiguous.php, 7:16-20),
             ty: HH\classname<this>,
             origin: "\\Base",
             refs: [],
         },
     },
     type_consts: {
         "TData": TypeConst {
             is_synthesized: false,
             name: (
                 Pos(root|tany_ambiguous.php, 8:14-19),
                 "TData",
             ),
             kind: ConcreteTypeconst {
                 ty: TANY,
             },
             origin: "\\Base",
             enforceable: None,
             reifiable: None,
             is_concretized: false,
             is_ctx: false,
         },
     },
 }
 FoldedClass {
     name: "\\Middle",
     pos: Pos(root|tany_ambiguous.php, 17:16-22),
     kind: Cclass(
         Abstract,
     ),
     substs: {
         "\\Base": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\Middle",
             from_req_extends: false,
         },
     },
     ancestors: {
         "\\Base": Base,
     },
     props: {
         "data": FoldedElement {
             flags: FINAL | NEEDS_INIT,
             origin: "\\Base",
             visibility: Protected(
                 "\\Base",
             ),
             deprecated: None,
         },
     },
     methods: {
         "getData": FoldedElement {
             flags: FINAL,
             origin: "\\Base",
             visibility: Protected(
                 "\\Base",
             ),
             deprecated: None,
         },
     },
     constructor: (
         FoldedElement {
             flags: (empty),
             origin: "\\Base",
             visibility: Private(
                 "\\Base",
             ),
             deprecated: None,
         },
         Inconsistent,
     ),
     consts: {
         "TData": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|tany_ambiguous.php, 18:14-19),
             ty: HH\TypeStructure<this::TData>,
             origin: "\\Middle",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|tany_ambiguous.php, 17:16-22),
             ty: HH\classname<this>,
             origin: "\\Middle",
             refs: [],
         },
     },
     type_consts: {
         "TData": TypeConst {
             is_synthesized: false,
             name: (
                 Pos(root|tany_ambiguous.php, 18:14-19),
                 "TData",
             ),
             kind: ConcreteTypeconst {
                 ty: string,
             },
             origin: "\\Middle",
             enforceable: None,
             reifiable: None,
             is_concretized: false,
             is_ctx: false,
         },
     },
     extends: {
         "\\Base",
     },
+    deferred_init_members: {
+        "parent::__construct",
+    },
 }
 FoldedClass {
     name: "\\ChildTrait1",
     pos: Pos(root|tany_ambiguous.php, 21:7-18),
     kind: Ctrait,
     substs: {
         "\\Base": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\Middle",
             from_req_extends: true,
         },
         "\\Middle": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\ChildTrait1",
             from_req_extends: true,
         },
     },
     props: {
         "data": FoldedElement {
             flags: FINAL | SYNTHESIZED | NEEDS_INIT,
             origin: "\\Base",
             visibility: Protected(
                 "\\Base",
             ),
             deprecated: None,
         },
     },
     methods: {
         "getData": FoldedElement {
             flags: FINAL | SYNTHESIZED,
             origin: "\\Base",
             visibility: Protected(
                 "\\Base",
             ),
             deprecated: None,
         },
     },
     constructor: (
         FoldedElement {
             flags: SYNTHESIZED,
             origin: "\\Base",
             visibility: Private(
                 "\\Base",
             ),
             deprecated: None,
         },
         Inconsistent,
     ),
     consts: {
         "TData": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|tany_ambiguous.php, 18:14-19),
             ty: HH\TypeStructure<this::TData>,
             origin: "\\Middle",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|tany_ambiguous.php, 21:7-18),
             ty: HH\classname<this>,
             origin: "\\ChildTrait1",
             refs: [],
         },
     },
     type_consts: {
         "TData": TypeConst {
             is_synthesized: true,
             name: (
                 Pos(root|tany_ambiguous.php, 18:14-19),
                 "TData",
             ),
             kind: ConcreteTypeconst {
                 ty: string,
             },
             origin: "\\Middle",
             enforceable: None,
             reifiable: None,
             is_concretized: false,
             is_ctx: false,
         },
     },
     req_ancestors: [
         Requirement(
             Pos(root|tany_ambiguous.php, 22:19-25),
             Middle,
         ),
     ],
     req_ancestors_extends: {
         "\\Base",
         "\\Middle",
     },
+    deferred_init_members: {
+        "parent::__construct",
+    },
 }
 FoldedClass {
     name: "\\ChildTrait2",
     pos: Pos(root|tany_ambiguous.php, 25:7-18),
     kind: Ctrait,
     substs: {
         "\\Base": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\ChildTrait2",
             from_req_extends: true,
         },
     },
     props: {
         "data": FoldedElement {
             flags: FINAL | SYNTHESIZED | NEEDS_INIT,
             origin: "\\Base",
             visibility: Protected(
                 "\\Base",
             ),
             deprecated: None,
         },
     },
     methods: {
         "getData": FoldedElement {
             flags: FINAL | SYNTHESIZED,
             origin: "\\Base",
             visibility: Protected(
                 "\\Base",
             ),
             deprecated: None,
         },
     },
     constructor: (
         FoldedElement {
             flags: SYNTHESIZED,
             origin: "\\Base",
             visibility: Private(
                 "\\Base",
             ),
             deprecated: None,
         },
         Inconsistent,
     ),
     consts: {
         "TData": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|tany_ambiguous.php, 8:14-19),
             ty: HH\TypeStructure<this::TData>,
             origin: "\\Base",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|tany_ambiguous.php, 25:7-18),
             ty: HH\classname<this>,
             origin: "\\ChildTrait2",
             refs: [],
         },
     },
     type_consts: {
         "TData": TypeConst {
             is_synthesized: true,
             name: (
                 Pos(root|tany_ambiguous.php, 8:14-19),
                 "TData",
             ),
             kind: ConcreteTypeconst {
                 ty: TANY,
             },
             origin: "\\Base",
             enforceable: None,
             reifiable: None,
             is_concretized: false,
             is_ctx: false,
         },
     },
     req_ancestors: [
         Requirement(
             Pos(root|tany_ambiguous.php, 26:19-23),
             Base,
         ),
     ],
     req_ancestors_extends: {
         "\\Base",
     },
+    deferred_init_members: {
+        "parent::__construct",
+    },
 }
 FoldedClass {
     name: "\\Child",
     pos: Pos(root|tany_ambiguous.php, 29:13-18),
     kind: Cclass(
         Concrete,
     ),
     is_final: true,
     substs: {
         "\\Base": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\Middle",
             from_req_extends: false,
         },
         "\\ChildTrait1": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\Child",
             from_req_extends: false,
         },
         "\\ChildTrait2": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\Child",
             from_req_extends: false,
         },
         "\\Middle": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\Child",
             from_req_extends: false,
         },
     },
     ancestors: {
         "\\Base": Base,
         "\\ChildTrait1": ChildTrait1,
         "\\ChildTrait2": ChildTrait2,
         "\\Middle": Middle,
     },
     props: {
         "data": FoldedElement {
             flags: FINAL | SYNTHESIZED | NEEDS_INIT,
             origin: "\\Base",
             visibility: Protected(
                 "\\Base",
             ),
             deprecated: None,
         },
     },
     methods: {
         "getData": FoldedElement {
             flags: FINAL,
             origin: "\\Base",
             visibility: Protected(
                 "\\Base",
             ),
             deprecated: None,
         },
         "test": FoldedElement {
             flags: (empty),
             origin: "\\Child",
             visibility: Public,
             deprecated: None,
         },
     },
     constructor: (
         FoldedElement {
             flags: (empty),
             origin: "\\Base",
             visibility: Private(
                 "\\Base",
             ),
             deprecated: None,
         },
         FinalClass,
     ),
     consts: {
         "TData": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|tany_ambiguous.php, 8:14-19),
             ty: HH\TypeStructure<this::TData>,
             origin: "\\Base",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|tany_ambiguous.php, 29:13-18),
             ty: HH\classname<this>,
             origin: "\\Child",
             refs: [],
         },
     },
     type_consts: {
         "TData": TypeConst {
             is_synthesized: true,
             name: (
                 Pos(root|tany_ambiguous.php, 8:14-19),
                 "TData",
             ),
             kind: ConcreteTypeconst {
                 ty: TANY,
             },
             origin: "\\Base",
             enforceable: None,
             reifiable: None,
             is_concretized: false,
             is_ctx: false,
         },
     },
     extends: {
         "\\Base",
         "\\ChildTrait1",
         "\\ChildTrait2",
         "\\Middle",
     },
     req_ancestors: [
         Requirement(
             Pos(root|tany_ambiguous.php, 35:7-18),
             Middle,
         ),
         Requirement(
             Pos(root|tany_ambiguous.php, 36:7-18),
             Base,
         ),
     ],
 }
