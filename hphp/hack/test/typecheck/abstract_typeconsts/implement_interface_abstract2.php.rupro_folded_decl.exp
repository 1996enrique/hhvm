--- ocaml
+++ rupro
@@ -1,181 +1,181 @@
 FoldedClass {
     name: "\\I",
     pos: Pos(root|implement_interface_abstract2.php, 3:11-12),
     kind: Cinterface,
     consts: {
         "T": ClassConst {
             is_synthesized: true,
             kind: CCAbstract(
                 false,
             ),
             pos: Pos(root|implement_interface_abstract2.php, 5:23-24),
             ty: HH\TypeStructure<this::T>,
             origin: "\\I",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|implement_interface_abstract2.php, 3:11-12),
             ty: HH\classname<this>,
             origin: "\\I",
             refs: [],
         },
     },
     type_consts: {
         "T": TypeConst {
             is_synthesized: false,
             name: (
                 Pos(root|implement_interface_abstract2.php, 5:23-24),
                 "T",
             ),
             kind: AbstractTypeconst {
                 as_constraint: Some(
                     arraykey,
                 ),
                 super_constraint: None,
                 default: None,
             },
             origin: "\\I",
             enforceable: Some(
                 Pos(root|implement_interface_abstract2.php, 4:5-18),
             ),
             reifiable: None,
             is_concretized: false,
             is_ctx: false,
         },
     },
 }
 FoldedClass {
     name: "\\A",
     pos: Pos(root|implement_interface_abstract2.php, 7:16-17),
     kind: Cclass(
         Abstract,
     ),
     consts: {
         "T": ClassConst {
             is_synthesized: true,
             kind: CCAbstract(
                 true,
             ),
             pos: Pos(root|implement_interface_abstract2.php, 8:23-24),
             ty: HH\TypeStructure<this::T>,
             origin: "\\A",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|implement_interface_abstract2.php, 7:16-17),
             ty: HH\classname<this>,
             origin: "\\A",
             refs: [],
         },
     },
     type_consts: {
         "T": TypeConst {
             is_synthesized: false,
             name: (
                 Pos(root|implement_interface_abstract2.php, 8:23-24),
                 "T",
             ),
             kind: AbstractTypeconst {
                 as_constraint: Some(
                     arraykey,
                 ),
                 super_constraint: None,
                 default: Some(
                     string,
                 ),
             },
             origin: "\\A",
             enforceable: None,
             reifiable: None,
             is_concretized: false,
             is_ctx: false,
         },
     },
 }
 FoldedClass {
     name: "\\C",
     pos: Pos(root|implement_interface_abstract2.php, 11:16-17),
     kind: Cclass(
         Abstract,
     ),
     substs: {
         "\\A": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\C",
             from_req_extends: false,
         },
         "\\I": SubstContext {
             subst: Subst(
                 {},
             ),
             class_context: "\\C",
             from_req_extends: false,
         },
     },
     ancestors: {
         "\\A": A,
         "\\I": I,
     },
     methods: {
         "f": FoldedElement {
             flags: (empty),
             origin: "\\C",
             visibility: Public,
             deprecated: None,
         },
     },
     consts: {
         "T": ClassConst {
             is_synthesized: true,
             kind: CCAbstract(
-                true,
+                false,
             ),
-            pos: Pos(root|implement_interface_abstract2.php, 8:23-24),
+            pos: Pos(root|implement_interface_abstract2.php, 5:23-24),
             ty: HH\TypeStructure<this::T>,
-            origin: "\\A",
+            origin: "\\I",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|implement_interface_abstract2.php, 11:16-17),
             ty: HH\classname<this>,
             origin: "\\C",
             refs: [],
         },
     },
     type_consts: {
         "T": TypeConst {
             is_synthesized: false,
             name: (
                 Pos(root|implement_interface_abstract2.php, 8:23-24),
                 "T",
             ),
             kind: AbstractTypeconst {
                 as_constraint: Some(
                     arraykey,
                 ),
                 super_constraint: None,
                 default: Some(
                     string,
                 ),
             },
             origin: "\\A",
             enforceable: Some(
                 Pos(root|implement_interface_abstract2.php, 4:5-18),
             ),
             reifiable: None,
             is_concretized: false,
             is_ctx: false,
         },
     },
     extends: {
         "\\A",
     },
 }
