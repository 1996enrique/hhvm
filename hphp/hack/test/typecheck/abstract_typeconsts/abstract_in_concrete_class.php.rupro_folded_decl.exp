--- ocaml
+++ rupro
@@ -1,85 +1,97 @@
 FoldedClass {
     name: "\\C",
     pos: Pos(root|abstract_in_concrete_class.php, 4:7-8),
     kind: Cclass(
         Concrete,
     ),
     consts: {
         "T": ClassConst {
             is_synthesized: true,
-            kind: CCConcrete,
+            kind: CCAbstract(
+                true,
+            ),
             pos: Pos(root|abstract_in_concrete_class.php, 5:23-24),
             ty: HH\TypeStructure<this::T>,
             origin: "\\C",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|abstract_in_concrete_class.php, 4:7-8),
             ty: HH\classname<this>,
             origin: "\\C",
             refs: [],
         },
     },
     type_consts: {
         "T": TypeConst {
             is_synthesized: false,
             name: (
                 Pos(root|abstract_in_concrete_class.php, 5:23-24),
                 "T",
             ),
-            kind: ConcreteTypeconst {
-                ty: int,
+            kind: AbstractTypeconst {
+                as_constraint: None,
+                super_constraint: None,
+                default: Some(
+                    int,
+                ),
             },
             origin: "\\C",
             enforceable: None,
             reifiable: None,
-            is_concretized: true,
+            is_concretized: false,
             is_ctx: false,
         },
     },
 }
 FoldedClass {
     name: "\\D",
     pos: Pos(root|abstract_in_concrete_class.php, 8:13-14),
     kind: Cclass(
         Concrete,
     ),
     is_final: true,
     consts: {
         "T": ClassConst {
             is_synthesized: true,
-            kind: CCConcrete,
+            kind: CCAbstract(
+                true,
+            ),
             pos: Pos(root|abstract_in_concrete_class.php, 9:23-24),
             ty: HH\TypeStructure<this::T>,
             origin: "\\D",
             refs: [],
         },
         "class": ClassConst {
             is_synthesized: true,
             kind: CCConcrete,
             pos: Pos(root|abstract_in_concrete_class.php, 8:13-14),
             ty: HH\classname<this>,
             origin: "\\D",
             refs: [],
         },
     },
     type_consts: {
         "T": TypeConst {
             is_synthesized: false,
             name: (
                 Pos(root|abstract_in_concrete_class.php, 9:23-24),
                 "T",
             ),
-            kind: ConcreteTypeconst {
-                ty: int,
+            kind: AbstractTypeconst {
+                as_constraint: None,
+                super_constraint: None,
+                default: Some(
+                    int,
+                ),
             },
             origin: "\\D",
             enforceable: None,
             reifiable: None,
-            is_concretized: true,
+            is_concretized: false,
             is_ctx: false,
         },
     },
 }
